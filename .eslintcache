[{"E:\\it-kamasutra\\Todolist\\src\\state\\store.ts":"1","E:\\it-kamasutra\\Todolist\\src\\Task.tsx":"2","E:\\it-kamasutra\\Todolist\\src\\App.tsx":"3","E:\\it-kamasutra\\Todolist\\src\\stories\\todolists-api.stories.tsx":"4","E:\\it-kamasutra\\Todolist\\src\\api\\api.ts":"5","E:\\it-kamasutra\\Todolist\\src\\stories\\tasks-api.stories.tsx":"6","E:\\it-kamasutra\\Todolist\\src\\state\\todolists-reducer.ts":"7","E:\\it-kamasutra\\Todolist\\src\\state\\tasks-reducer.ts":"8","E:\\it-kamasutra\\Todolist\\src\\Todolist.tsx":"9","E:\\it-kamasutra\\Todolist\\src\\reportWebVitals.ts":"10","E:\\it-kamasutra\\Todolist\\src\\state\\app-reducer.ts":"11","E:\\it-kamasutra\\Todolist\\src\\index.tsx":"12","E:\\it-kamasutra\\Todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"13","E:\\it-kamasutra\\Todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","E:\\it-kamasutra\\Todolist\\src\\components\\AddItemForm\\AddItemForm.tsx":"15","E:\\it-kamasutra\\Todolist\\src\\utils\\error-utils.ts":"16","E:\\it-kamasutra\\Todolist\\src\\TodolistsList.tsx":"17","E:\\it-kamasutra\\Todolist\\src\\features\\Login\\Login.tsx":"18","E:\\it-kamasutra\\Todolist\\src\\state\\auth-reducer.ts":"19"},{"size":1111,"mtime":1624311977628,"results":"20","hashOfConfig":"21"},{"size":1701,"mtime":1622661274656,"results":"22","hashOfConfig":"21"},{"size":2508,"mtime":1624315764266,"results":"23","hashOfConfig":"21"},{"size":1381,"mtime":1622467064398,"results":"24","hashOfConfig":"21"},{"size":2867,"mtime":1624315538926,"results":"25","hashOfConfig":"21"},{"size":1647,"mtime":1622552958801,"results":"26","hashOfConfig":"21"},{"size":7028,"mtime":1624316079700,"results":"27","hashOfConfig":"21"},{"size":10945,"mtime":1624316240482,"results":"28","hashOfConfig":"21"},{"size":3950,"mtime":1623840077762,"results":"29","hashOfConfig":"21"},{"size":425,"mtime":1607869388000,"results":"30","hashOfConfig":"21"},{"size":1579,"mtime":1624315893470,"results":"31","hashOfConfig":"21"},{"size":696,"mtime":1624298387899,"results":"32","hashOfConfig":"21"},{"size":952,"mtime":1623494425080,"results":"33","hashOfConfig":"21"},{"size":1271,"mtime":1623606859463,"results":"34","hashOfConfig":"21"},{"size":1669,"mtime":1623840271779,"results":"35","hashOfConfig":"21"},{"size":725,"mtime":1623839327676,"results":"36","hashOfConfig":"21"},{"size":4195,"mtime":1624314223682,"results":"37","hashOfConfig":"21"},{"size":3725,"mtime":1624313223011,"results":"38","hashOfConfig":"21"},{"size":1508,"mtime":1624312649194,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qmfk5q",{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\it-kamasutra\\Todolist\\src\\state\\store.ts",[],"E:\\it-kamasutra\\Todolist\\src\\Task.tsx",["80","81","82"],"E:\\it-kamasutra\\Todolist\\src\\App.tsx",["83"],"E:\\it-kamasutra\\Todolist\\src\\stories\\todolists-api.stories.tsx",["84","85"],"E:\\it-kamasutra\\Todolist\\src\\api\\api.ts",[],"E:\\it-kamasutra\\Todolist\\src\\stories\\tasks-api.stories.tsx",["86"],"E:\\it-kamasutra\\Todolist\\src\\state\\todolists-reducer.ts",["87"],"E:\\it-kamasutra\\Todolist\\src\\state\\tasks-reducer.ts",["88","89"],"import { UpdateTaskModelType, TaskStatuses } from './../api/api';\r\nimport { AppRootStateType } from './store';\r\nimport { AddTodolistActionType, RemoveTodolistActionType, SetTodosActionType } from './todolists-reducer';\r\nimport { TasksStateType } from '../App';\r\nimport { Dispatch } from 'redux';\r\nimport { tasksAPI, TaskType } from '../api/api';\r\nimport { setAppErrorAC, SetAppErrorType, setAppStatusAC, SetAppStatusType, StatuseesCode } from './app-reducer';\r\nimport { AxiosError } from 'axios';\r\nimport { handleServerNetworkError } from '../utils/error-utils';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'todolist/tasks/REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'todolist/tasks/ADD-TASK',\r\n    task: TaskType\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = ReturnType<typeof changeTaskStatusAC>\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'todolist/tasks/CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\nexport type SetTasksActionType = {\r\n    type: 'todolist/tasks/SET-TASKS'\r\n    tasks: Array<TaskType>\r\n    todolistId: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodosActionType\r\n    | SetTasksActionType\r\n    | SetAppStatusType\r\n    | SetAppErrorType\r\n\r\nconst initialState: TasksStateType = {\r\n\r\n\r\n    /*\"todolistId1\": [\r\n       { id: \"1\", title: \"CSS\", status: TaskStatuses.New, todoListId: \"todolistId1\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"2\", title: \"JS\", status: TaskStatuses.Completed, todoListId: \"todolistId1\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"3\", title: \"React\", status: TaskStatuses.New, todoListId: \"todolistId1\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low }\r\n   ],\r\n   \"todolistId2\": [\r\n       { id: \"1\", title: \"bread\", status: TaskStatuses.New, todoListId: \"todolistId2\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"2\", title: \"milk\", status: TaskStatuses.Completed, todoListId: \"todolistId2\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"3\", title: \"tea\", status: TaskStatuses.New, todoListId: \"todolistId2\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low }\r\n   ]*/\r\n}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'todolist/tasks/SET-TASKS': {\r\n            const stateCopy = { ...state }\r\n            stateCopy[action.todolistId] = action.tasks\r\n            return stateCopy\r\n        }\r\n\r\n        case 'todolists/SET-TODOS': {\r\n            const stateCopy = { ...state }\r\n            action.todos.forEach((tl) => {\r\n                stateCopy[tl.id] = []\r\n            })\r\n            return stateCopy\r\n        }\r\n\r\n        case 'todolist/tasks/REMOVE-TASK': {\r\n            const stateCopy = { ...state }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'todolist/tasks/ADD-TASK': {\r\n            const stateCopy = { ...state }\r\n            // const newTask: TaskType = {\r\n            //     id: v1(),\r\n            //     title: action.title,\r\n            //     status: TaskStatuses.New,\r\n            //     todoListId: action.todolistId, description: '',\r\n            //     startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low\r\n            // }\r\n            const tasks = stateCopy[action.task.todoListId];\r\n            const newTasks = [action.task, ...tasks];\r\n            stateCopy[action.task.todoListId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'todolist/tasks/CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? { ...t, status: action.status } : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({ ...state });\r\n        }\r\n        case 'todolist/tasks/CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? { ...t, title: action.title } : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({ ...state });\r\n        }\r\n        case 'todolists/ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'todolists/REMOVE-TODOLIST': {\r\n            const copyState = { ...state };\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//todo ACTION CREATORS\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return { type: 'todolist/tasks/REMOVE-TASK', taskId: taskId, todolistId: todolistId }\r\n}\r\nexport const addTaskAC = (task: TaskType): AddTaskActionType => {\r\n    return { type: 'todolist/tasks/ADD-TASK', task }\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, status: TaskStatuses, todolistId: string) => {\r\n    return { type: 'todolist/tasks/CHANGE-TASK-STATUS', status, todolistId, taskId } as const\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return { type: 'todolist/tasks/CHANGE-TASK-TITLE', title, todolistId, taskId }\r\n}\r\n\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string): SetTasksActionType => {\r\n    return { type: 'todolist/tasks/SET-TASKS', tasks, todolistId }\r\n}\r\n\r\n//todo THUNK CREATORS\r\nexport const fetchTasksTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        tasksAPI.getTasks(todolistId)\r\n            .then((res) => {\r\n                const tasks = res.data.items\r\n                dispatch(setTasksAC(tasks, todolistId))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(dispatch, err.message)\r\n            })\r\n    }\r\n}\r\n\r\nexport const removeTasksTC = (todolistId: string, taskId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n\r\n    tasksAPI.deleteTask(todolistId, taskId)\r\n        .then((res) => {\r\n            dispatch(removeTaskAC(taskId, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        }).catch((err: AxiosError) => {\r\n            handleServerNetworkError(dispatch, err.message)\r\n        })\r\n}\r\n\r\nexport const addTaskTC = (todolistId: string, taskTitile: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    tasksAPI.createTask(todolistId, taskTitile)\r\n        .then((res) => {\r\n            if (res.data.resultCode === StatuseesCode.successs) {\r\n                let newTask = res.data.data.item;\r\n                dispatch(addTaskAC(newTask))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerNetworkError(dispatch, res.data.messages[0])\r\n                // dispatch(setAppErrorAC(res.data.messages[0]))\r\n                // dispatch(setAppStatusAC('failed'))\r\n            }\r\n        }).catch((err: AxiosError) => {\r\n            handleServerNetworkError(dispatch, err.message)\r\n            // dispatch(setAppErrorAC(err.message));\r\n            // dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const updateTaskStatusTC = (todolistId: string, taskId: string, status: TaskStatuses) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n\r\n    //обращаемся к стейту\r\n    let state = getState();\r\n    //получаем массив тасок\r\n    let allTasks = state.tasks\r\n    //теперь нужно достать таски конкретного тудулиста\r\n    let tasksForCurrentTodolist = allTasks[todolistId]\r\n    //находим конкретную таску у которой меняем статус\r\n    let findTask = tasksForCurrentTodolist.find(t => t.id === taskId);\r\n    //todo первый способ: передаюттся лишние строки на сервер\r\n    //const newTask = { ...findTask, status: status }\r\n    //const model = newTask;\r\n\r\n    //todo для того чтобы не передавать лишие строки на сервер делаем так:\r\n    //условие обязательно\r\n    if (findTask) {\r\n        const model: UpdateTaskModelType = {\r\n            title: findTask.title,\r\n            status: status,\r\n            startDate: findTask.startDate,\r\n            priority: findTask.priority,\r\n            description: findTask.description,\r\n            deadline: findTask.deadline\r\n        }\r\n\r\n        tasksAPI.updateTask(todolistId, taskId, model as UpdateTaskModelType)\r\n            .then((res) => {\r\n                let updateTask = res.data.data.item.status\r\n                dispatch(changeTaskStatusAC(taskId, updateTask, todolistId))\r\n            }).catch((err: AxiosError) => {\r\n                handleServerNetworkError(dispatch, err.message)\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const changeTaskTitleTC = (todolistId: string, taskId: string, title: string) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    let findTask = getState().tasks[todolistId].find(t => t.id === taskId);\r\n    if (findTask) {\r\n        const model: UpdateTaskModelType = {\r\n            title: title,\r\n            status: findTask.status,\r\n            startDate: findTask.startDate,\r\n            priority: findTask.priority,\r\n            description: findTask.description,\r\n            deadline: findTask.deadline\r\n        }\r\n\r\n        tasksAPI.updateTask(todolistId, taskId, model as UpdateTaskModelType)\r\n            .then((res) => {\r\n                let title = res.data.data.item.title\r\n                dispatch(changeTaskTitleAC(taskId, title, todolistId))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            }).catch((err: AxiosError) => {\r\n                handleServerNetworkError(dispatch, err.message)\r\n            })\r\n    }\r\n}","E:\\it-kamasutra\\Todolist\\src\\Todolist.tsx",["90","91","92","93","94","95","96"],"E:\\it-kamasutra\\Todolist\\src\\reportWebVitals.ts",[],["97","98"],"E:\\it-kamasutra\\Todolist\\src\\state\\app-reducer.ts",[],"E:\\it-kamasutra\\Todolist\\src\\index.tsx",["99"],"E:\\it-kamasutra\\Todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"E:\\it-kamasutra\\Todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"E:\\it-kamasutra\\Todolist\\src\\components\\AddItemForm\\AddItemForm.tsx",[],"E:\\it-kamasutra\\Todolist\\src\\utils\\error-utils.ts",["100"],"E:\\it-kamasutra\\Todolist\\src\\TodolistsList.tsx",["101","102","103","104","105","106","107","108"],"E:\\it-kamasutra\\Todolist\\src\\features\\Login\\Login.tsx",["109"],"E:\\it-kamasutra\\Todolist\\src\\state\\auth-reducer.ts",[],{"ruleId":"110","severity":1,"message":"111","line":16,"column":97,"nodeType":"112","endLine":16,"endColumn":130,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"111","line":21,"column":8,"nodeType":"112","endLine":21,"endColumn":41,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"111","line":25,"column":8,"nodeType":"112","endLine":25,"endColumn":41,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":38,"column":8,"nodeType":"112","endLine":38,"endColumn":10,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":4,"column":1,"nodeType":"120","endLine":6,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":45,"column":15,"nodeType":"123","messageId":"124","endLine":45,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":4,"column":1,"nodeType":"120","endLine":6,"endColumn":2},{"ruleId":"121","severity":1,"message":"125","line":5,"column":29,"nodeType":"123","messageId":"124","endLine":5,"endColumn":42},{"ruleId":"121","severity":1,"message":"125","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":86,"column":53,"nodeType":"128","messageId":"129","endLine":86,"endColumn":55},{"ruleId":"121","severity":1,"message":"130","line":12,"column":10,"nodeType":"123","messageId":"124","endLine":12,"endColumn":20},{"ruleId":"110","severity":1,"message":"131","line":38,"column":8,"nodeType":"112","endLine":38,"endColumn":10,"suggestions":"132"},{"ruleId":"110","severity":1,"message":"111","line":44,"column":8,"nodeType":"112","endLine":44,"endColumn":33,"suggestions":"133"},{"ruleId":"110","severity":1,"message":"111","line":51,"column":8,"nodeType":"112","endLine":51,"endColumn":45,"suggestions":"134"},{"ruleId":"110","severity":1,"message":"111","line":53,"column":86,"nodeType":"112","endLine":53,"endColumn":116,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"111","line":54,"column":92,"nodeType":"112","endLine":54,"endColumn":122,"suggestions":"136"},{"ruleId":"110","severity":1,"message":"111","line":55,"column":98,"nodeType":"112","endLine":55,"endColumn":128,"suggestions":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"121","severity":1,"message":"142","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":23},{"ruleId":"121","severity":1,"message":"143","line":20,"column":6,"nodeType":"123","messageId":"124","endLine":20,"endColumn":23},{"ruleId":"110","severity":1,"message":"144","line":25,"column":8,"nodeType":"112","endLine":25,"endColumn":10,"suggestions":"145"},{"ruleId":"110","severity":1,"message":"146","line":35,"column":8,"nodeType":"112","endLine":35,"endColumn":10,"suggestions":"147"},{"ruleId":"110","severity":1,"message":"146","line":39,"column":8,"nodeType":"112","endLine":39,"endColumn":10,"suggestions":"148"},{"ruleId":"110","severity":1,"message":"146","line":43,"column":8,"nodeType":"112","endLine":43,"endColumn":10,"suggestions":"149"},{"ruleId":"110","severity":1,"message":"146","line":48,"column":8,"nodeType":"112","endLine":48,"endColumn":10,"suggestions":"150"},{"ruleId":"110","severity":1,"message":"146","line":54,"column":8,"nodeType":"112","endLine":54,"endColumn":10,"suggestions":"151"},{"ruleId":"110","severity":1,"message":"146","line":58,"column":8,"nodeType":"112","endLine":58,"endColumn":10,"suggestions":"152"},{"ruleId":"110","severity":1,"message":"146","line":62,"column":8,"nodeType":"112","endLine":62,"endColumn":10,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":54,"column":37,"nodeType":"156","endLine":54,"endColumn":54},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["157"],["158"],["159"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["160"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'todolistId' is assigned a value but never used.","Identifier","unusedVar","'setAppErrorAC' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setTodosTC' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["161"],["162"],["163"],["164"],["165"],["166"],"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'BrowserRouter' is defined but never used.","'ErrorsActionTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["169"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["170"],["171"],["172"],["173"],["174"],["175"],["176"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"177","fix":"185"},{"desc":"177","fix":"186"},{"desc":"177","fix":"187"},{"desc":"177","fix":"188"},{"desc":"177","fix":"189"},"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"181","fix":"192"},{"desc":"181","fix":"193"},{"desc":"181","fix":"194"},{"desc":"181","fix":"195"},{"desc":"181","fix":"196"},{"desc":"181","fix":"197"},{"desc":"181","fix":"198"},"Update the dependencies array to be: [props]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},"Update the dependencies array to be: [dispatch]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"205","text":"206"},{"range":"207","text":"200"},{"range":"208","text":"200"},{"range":"209","text":"200"},{"range":"210","text":"200"},{"range":"211","text":"200"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"212","text":"213"},{"range":"214","text":"204"},{"range":"215","text":"204"},{"range":"216","text":"204"},{"range":"217","text":"204"},{"range":"218","text":"204"},{"range":"219","text":"204"},{"range":"220","text":"204"},[715,748],"[props]",[1021,1054],[1211,1244],[1266,1268],"[dispatch]",[1509,1511],"[dispatch, props.id]",[1621,1646],[1859,1896],[1986,2016],[2110,2140],[2240,2270],[1119,1121],"[demo, dispatch, isLoggedIn]",[1523,1525],[1666,1668],[1848,1850],[2032,2034],[2267,2269],[2384,2386],[2533,2535]]