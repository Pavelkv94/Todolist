[{"E:\\it-kamasutra\\Todolist\\src\\state\\store.ts":"1","E:\\it-kamasutra\\Todolist\\src\\Task.tsx":"2","E:\\it-kamasutra\\Todolist\\src\\App.tsx":"3","E:\\it-kamasutra\\Todolist\\src\\stories\\todolists-api.stories.tsx":"4","E:\\it-kamasutra\\Todolist\\src\\api\\api.ts":"5","E:\\it-kamasutra\\Todolist\\src\\stories\\tasks-api.stories.tsx":"6","E:\\it-kamasutra\\Todolist\\src\\state\\todolists-reducer.ts":"7","E:\\it-kamasutra\\Todolist\\src\\state\\tasks-reducer.ts":"8","E:\\it-kamasutra\\Todolist\\src\\Todolist.tsx":"9","E:\\it-kamasutra\\Todolist\\src\\reportWebVitals.ts":"10","E:\\it-kamasutra\\Todolist\\src\\state\\app-reducer.ts":"11","E:\\it-kamasutra\\Todolist\\src\\index.tsx":"12","E:\\it-kamasutra\\Todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"13","E:\\it-kamasutra\\Todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","E:\\it-kamasutra\\Todolist\\src\\components\\AddItemForm\\AddItemForm.tsx":"15","E:\\it-kamasutra\\Todolist\\src\\utils\\error-utils.ts":"16","E:\\it-kamasutra\\Todolist\\src\\TodolistsList.tsx":"17","E:\\it-kamasutra\\Todolist\\src\\features\\Login\\Login.tsx":"18","E:\\it-kamasutra\\Todolist\\src\\state\\auth-reducer.ts":"19"},{"size":1117,"mtime":1624318278551,"results":"20","hashOfConfig":"21"},{"size":1725,"mtime":1623840271777,"results":"22","hashOfConfig":"21"},{"size":3127,"mtime":1624629174675,"results":"23","hashOfConfig":"21"},{"size":1381,"mtime":1622467064398,"results":"24","hashOfConfig":"21"},{"size":2952,"mtime":1624629987085,"results":"25","hashOfConfig":"21"},{"size":1647,"mtime":1622552958801,"results":"26","hashOfConfig":"21"},{"size":6734,"mtime":1624631140838,"results":"27","hashOfConfig":"21"},{"size":10600,"mtime":1624631117959,"results":"28","hashOfConfig":"21"},{"size":3935,"mtime":1624383483140,"results":"29","hashOfConfig":"21"},{"size":425,"mtime":1607869388000,"results":"30","hashOfConfig":"21"},{"size":2015,"mtime":1624318231220,"results":"31","hashOfConfig":"21"},{"size":696,"mtime":1624298387899,"results":"32","hashOfConfig":"21"},{"size":952,"mtime":1623840271780,"results":"33","hashOfConfig":"21"},{"size":1271,"mtime":1623840271780,"results":"34","hashOfConfig":"21"},{"size":1669,"mtime":1623840271779,"results":"35","hashOfConfig":"21"},{"size":727,"mtime":1624628051930,"results":"36","hashOfConfig":"21"},{"size":4249,"mtime":1624383476774,"results":"37","hashOfConfig":"21"},{"size":3725,"mtime":1624313223011,"results":"38","hashOfConfig":"21"},{"size":2066,"mtime":1624318261757,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"qmfk5q",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"E:\\it-kamasutra\\Todolist\\src\\state\\store.ts",[],["85","86"],"E:\\it-kamasutra\\Todolist\\src\\Task.tsx",["87","88","89"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport { TaskStatuses, TaskType } from './api/api'\r\n\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\it-kamasutra\\Todolist\\src\\App.tsx",["90"],"E:\\it-kamasutra\\Todolist\\src\\stories\\todolists-api.stories.tsx",["91","92"],"E:\\it-kamasutra\\Todolist\\src\\api\\api.ts",[],"E:\\it-kamasutra\\Todolist\\src\\stories\\tasks-api.stories.tsx",["93"],"E:\\it-kamasutra\\Todolist\\src\\state\\todolists-reducer.ts",[],"E:\\it-kamasutra\\Todolist\\src\\state\\tasks-reducer.ts",[],"E:\\it-kamasutra\\Todolist\\src\\Todolist.tsx",["94","95","96","97","98","99"],"E:\\it-kamasutra\\Todolist\\src\\reportWebVitals.ts",[],["100","101"],"E:\\it-kamasutra\\Todolist\\src\\state\\app-reducer.ts",[],"E:\\it-kamasutra\\Todolist\\src\\index.tsx",["102"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './state/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["103","104"],"E:\\it-kamasutra\\Todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"E:\\it-kamasutra\\Todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"E:\\it-kamasutra\\Todolist\\src\\components\\AddItemForm\\AddItemForm.tsx",[],"E:\\it-kamasutra\\Todolist\\src\\utils\\error-utils.ts",["105","106"],"E:\\it-kamasutra\\Todolist\\src\\TodolistsList.tsx",["107","108","109","110","111","112","113","114"],"E:\\it-kamasutra\\Todolist\\src\\features\\Login\\Login.tsx",["115"],"import React from 'react'\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid } from '@material-ui/core'\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginTC } from '../../state/auth-reducer';\r\nimport { AppRootStateType } from '../../state/store';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password (minimal 4 sybmols)';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/'} />\r\n    } else {\r\n        return <Grid container justify=\"center\">\r\n            <Grid item xs={4}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl>\r\n                        <FormLabel>\r\n                            <p>To log in get registered\r\n                                <a href={'https://social-network.samuraijs.com/'}\r\n                                    target={'_blank'}>here\r\n                                </a>\r\n                            </p>\r\n                            <p>or use common test account credentials:</p>\r\n                            <p>Email: free@samuraijs.com</p>\r\n                            <p>Password: free</p>\r\n                        </FormLabel>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps('email')}\r\n                            />\r\n                            {formik.touched.email &&\r\n                                formik.errors.email ? <div style={{ color: 'red' }}>{formik.errors.email}</div> : null}\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            {formik.touched.password && formik.errors.password ? <div style={{ color: 'red' }}>{formik.errors.password}</div> : null}\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox\r\n                                    {...formik.getFieldProps('rememberMe ')}\r\n                                />}\r\n                            />\r\n                            <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n}",["116","117"],"E:\\it-kamasutra\\Todolist\\src\\state\\auth-reducer.ts",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":16,"column":97,"nodeType":"124","endLine":16,"endColumn":130,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"123","line":21,"column":8,"nodeType":"124","endLine":21,"endColumn":41,"suggestions":"126"},{"ruleId":"122","severity":1,"message":"123","line":25,"column":8,"nodeType":"124","endLine":25,"endColumn":41,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":42,"column":8,"nodeType":"124","endLine":42,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":4,"column":1,"nodeType":"132","endLine":6,"endColumn":2},{"ruleId":"133","severity":1,"message":"134","line":45,"column":15,"nodeType":"135","messageId":"136","endLine":45,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":4,"column":1,"nodeType":"132","endLine":6,"endColumn":2},{"ruleId":"122","severity":1,"message":"137","line":38,"column":8,"nodeType":"124","endLine":38,"endColumn":10,"suggestions":"138"},{"ruleId":"122","severity":1,"message":"123","line":42,"column":8,"nodeType":"124","endLine":42,"endColumn":33,"suggestions":"139"},{"ruleId":"122","severity":1,"message":"123","line":49,"column":8,"nodeType":"124","endLine":49,"endColumn":45,"suggestions":"140"},{"ruleId":"122","severity":1,"message":"123","line":51,"column":86,"nodeType":"124","endLine":51,"endColumn":116,"suggestions":"141"},{"ruleId":"122","severity":1,"message":"123","line":52,"column":92,"nodeType":"124","endLine":52,"endColumn":122,"suggestions":"142"},{"ruleId":"122","severity":1,"message":"123","line":53,"column":98,"nodeType":"124","endLine":53,"endColumn":128,"suggestions":"143"},{"ruleId":"118","replacedBy":"144"},{"ruleId":"120","replacedBy":"145"},{"ruleId":"133","severity":1,"message":"146","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":23},{"ruleId":"118","replacedBy":"147"},{"ruleId":"120","replacedBy":"148"},{"ruleId":"133","severity":1,"message":"149","line":2,"column":25,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"150","line":2,"column":58,"nodeType":"135","messageId":"136","endLine":2,"endColumn":74},{"ruleId":"122","severity":1,"message":"151","line":25,"column":8,"nodeType":"124","endLine":25,"endColumn":10,"suggestions":"152"},{"ruleId":"122","severity":1,"message":"153","line":35,"column":8,"nodeType":"124","endLine":35,"endColumn":10,"suggestions":"154"},{"ruleId":"122","severity":1,"message":"153","line":39,"column":8,"nodeType":"124","endLine":39,"endColumn":10,"suggestions":"155"},{"ruleId":"122","severity":1,"message":"153","line":43,"column":8,"nodeType":"124","endLine":43,"endColumn":10,"suggestions":"156"},{"ruleId":"122","severity":1,"message":"153","line":48,"column":8,"nodeType":"124","endLine":48,"endColumn":10,"suggestions":"157"},{"ruleId":"122","severity":1,"message":"153","line":54,"column":8,"nodeType":"124","endLine":54,"endColumn":10,"suggestions":"158"},{"ruleId":"122","severity":1,"message":"153","line":58,"column":8,"nodeType":"124","endLine":58,"endColumn":10,"suggestions":"159"},{"ruleId":"122","severity":1,"message":"153","line":62,"column":8,"nodeType":"124","endLine":62,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":54,"column":37,"nodeType":"163","endLine":54,"endColumn":54},{"ruleId":"118","replacedBy":"164"},{"ruleId":"120","replacedBy":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["168"],["169"],["170"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["171"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'todolistId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'props.demo', and 'props.id'. Either include them or remove the dependency array.",["172"],["173"],["174"],["175"],["176"],["177"],["166"],["167"],"'BrowserRouter' is defined but never used.",["166"],["167"],"'SetAppErrorType' is defined but never used.","'SetAppStatusType' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["178"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["179"],["180"],["181"],["182"],["183"],["184"],["185"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["166"],["167"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"186","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"186","fix":"194"},{"desc":"186","fix":"195"},{"desc":"186","fix":"196"},{"desc":"186","fix":"197"},{"desc":"186","fix":"198"},{"desc":"199","fix":"200"},{"desc":"190","fix":"201"},{"desc":"190","fix":"202"},{"desc":"190","fix":"203"},{"desc":"190","fix":"204"},{"desc":"190","fix":"205"},{"desc":"190","fix":"206"},{"desc":"190","fix":"207"},"Update the dependencies array to be: [props]",{"range":"208","text":"209"},{"range":"210","text":"209"},{"range":"211","text":"209"},"Update the dependencies array to be: [dispatch]",{"range":"212","text":"213"},"Update the dependencies array to be: [dispatch, props.demo, props.id]",{"range":"214","text":"215"},{"range":"216","text":"209"},{"range":"217","text":"209"},{"range":"218","text":"209"},{"range":"219","text":"209"},{"range":"220","text":"209"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"221","text":"222"},{"range":"223","text":"213"},{"range":"224","text":"213"},{"range":"225","text":"213"},{"range":"226","text":"213"},{"range":"227","text":"213"},{"range":"228","text":"213"},{"range":"229","text":"213"},[739,772],"[props]",[1045,1078],[1235,1268],[1547,1549],"[dispatch]",[1488,1490],"[dispatch, props.demo, props.id]",[1596,1621],[1836,1873],[1964,1994],[2089,2119],[2220,2250],[1120,1122],"[demo, dispatch, isLoggedIn]",[1527,1529],[1670,1672],[1852,1854],[2036,2038],[2271,2273],[2388,2390],[2537,2539]]