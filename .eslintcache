[{"E:\\it-kamasutra\\Todolist\\src\\state\\store.ts":"1","E:\\it-kamasutra\\Todolist\\src\\Task.tsx":"2","E:\\it-kamasutra\\Todolist\\src\\App.tsx":"3","E:\\it-kamasutra\\Todolist\\src\\stories\\todolists-api.stories.tsx":"4","E:\\it-kamasutra\\Todolist\\src\\api\\api.ts":"5","E:\\it-kamasutra\\Todolist\\src\\stories\\tasks-api.stories.tsx":"6","E:\\it-kamasutra\\Todolist\\src\\state\\todolists-reducer.ts":"7","E:\\it-kamasutra\\Todolist\\src\\state\\tasks-reducer.ts":"8"},{"size":892,"mtime":1622549760272,"results":"9","hashOfConfig":"10"},{"size":1603,"mtime":1594154664000,"results":"11","hashOfConfig":"10"},{"size":5065,"mtime":1622548453904,"results":"12","hashOfConfig":"10"},{"size":1381,"mtime":1622467064398,"results":"13","hashOfConfig":"10"},{"size":2500,"mtime":1622494813023,"results":"14","hashOfConfig":"10"},{"size":1650,"mtime":1622494969578,"results":"15","hashOfConfig":"10"},{"size":3697,"mtime":1622548186673,"results":"16","hashOfConfig":"10"},{"size":5180,"mtime":1622545876999,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qmfk5q",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"E:\\it-kamasutra\\Todolist\\src\\state\\store.ts",[],"E:\\it-kamasutra\\Todolist\\src\\Task.tsx",["35","36","37"],"E:\\it-kamasutra\\Todolist\\src\\App.tsx",["38","39","40","41","42","43","44","45","46","47"],"E:\\it-kamasutra\\Todolist\\src\\stories\\todolists-api.stories.tsx",["48","49"],"E:\\it-kamasutra\\Todolist\\src\\api\\api.ts",[],"E:\\it-kamasutra\\Todolist\\src\\stories\\tasks-api.stories.tsx",["50"],"E:\\it-kamasutra\\Todolist\\src\\state\\todolists-reducer.ts",["51"],"E:\\it-kamasutra\\Todolist\\src\\state\\tasks-reducer.ts",["52"],"import { TaskType } from '../Todolist';\r\nimport { v1 } from 'uuid';\r\nimport { AddTodolistActionType, RemoveTodolistActionType, SetTodosActionType } from './todolists-reducer';\r\nimport { TasksStateType } from '../App';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodosActionType\r\n\r\nconst initialState: TasksStateType = {\r\n\r\n\r\n    /*\"todolistId1\": [\r\n       { id: \"1\", title: \"CSS\", status: TaskStatuses.New, todoListId: \"todolistId1\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"2\", title: \"JS\", status: TaskStatuses.Completed, todoListId: \"todolistId1\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"3\", title: \"React\", status: TaskStatuses.New, todoListId: \"todolistId1\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low }\r\n   ],\r\n   \"todolistId2\": [\r\n       { id: \"1\", title: \"bread\", status: TaskStatuses.New, todoListId: \"todolistId2\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"2\", title: \"milk\", status: TaskStatuses.Completed, todoListId: \"todolistId2\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n       { id: \"3\", title: \"tea\", status: TaskStatuses.New, todoListId: \"todolistId2\", description: '',\r\n           startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low }\r\n   ]*/\r\n}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'SET-TODOS': {\r\n            const stateCopy = { ...state }\r\n            action.todos.forEach((tl) => {\r\n                stateCopy[tl.id] = []\r\n            })\r\n            return stateCopy\r\n        }\r\n\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = { ...state }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = { ...state }\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? { ...t, isDone: action.isDone } : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({ ...state });\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? { ...t, title: action.title } : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({ ...state });\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = { ...state };\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//todo ACTION CREATORS\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return { type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId }\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return { type: 'ADD-TASK', title, todolistId }\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return { type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId }\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return { type: 'CHANGE-TASK-TITLE', title, todolistId, taskId }\r\n}\r\n\r\n",{"ruleId":"53","severity":1,"message":"54","line":15,"column":97,"nodeType":"55","endLine":15,"endColumn":130,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"54","line":20,"column":8,"nodeType":"55","endLine":20,"endColumn":41,"suggestions":"57"},{"ruleId":"53","severity":1,"message":"54","line":24,"column":8,"nodeType":"55","endLine":24,"endColumn":41,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":12,"column":5,"nodeType":"61","messageId":"62","endLine":12,"endColumn":15},{"ruleId":"59","severity":1,"message":"63","line":19,"column":10,"nodeType":"61","messageId":"62","endLine":19,"endColumn":21},{"ruleId":"53","severity":1,"message":"64","line":43,"column":8,"nodeType":"55","endLine":43,"endColumn":10,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"66","line":54,"column":8,"nodeType":"55","endLine":54,"endColumn":10,"suggestions":"67"},{"ruleId":"53","severity":1,"message":"66","line":59,"column":8,"nodeType":"55","endLine":59,"endColumn":10,"suggestions":"68"},{"ruleId":"53","severity":1,"message":"66","line":64,"column":8,"nodeType":"55","endLine":64,"endColumn":10,"suggestions":"69"},{"ruleId":"53","severity":1,"message":"66","line":69,"column":8,"nodeType":"55","endLine":69,"endColumn":10,"suggestions":"70"},{"ruleId":"53","severity":1,"message":"66","line":75,"column":8,"nodeType":"55","endLine":75,"endColumn":10,"suggestions":"71"},{"ruleId":"53","severity":1,"message":"66","line":80,"column":8,"nodeType":"55","endLine":80,"endColumn":10,"suggestions":"72"},{"ruleId":"53","severity":1,"message":"66","line":85,"column":8,"nodeType":"55","endLine":85,"endColumn":10,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":1,"nodeType":"76","endLine":6,"endColumn":2},{"ruleId":"59","severity":1,"message":"77","line":45,"column":15,"nodeType":"61","messageId":"62","endLine":45,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":4,"column":1,"nodeType":"76","endLine":6,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":48,"column":45,"nodeType":"80","messageId":"81","endLine":48,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":73,"column":53,"nodeType":"80","messageId":"81","endLine":73,"endColumn":55},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["82"],["83"],["84"],"@typescript-eslint/no-unused-vars","'setTodosAC' is defined but never used.","Identifier","unusedVar","'todolistAPI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["85"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["86"],["87"],["88"],["89"],["90"],["91"],["92"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'todolistId' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},{"desc":"93","fix":"96"},{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"97","fix":"100"},{"desc":"97","fix":"101"},{"desc":"97","fix":"102"},{"desc":"97","fix":"103"},{"desc":"97","fix":"104"},{"desc":"97","fix":"105"},"Update the dependencies array to be: [props]",{"range":"106","text":"107"},{"range":"108","text":"107"},{"range":"109","text":"107"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},{"range":"112","text":"111"},{"range":"113","text":"111"},{"range":"114","text":"111"},{"range":"115","text":"111"},{"range":"116","text":"111"},{"range":"117","text":"111"},{"range":"118","text":"111"},[693,726],"[props]",[955,988],[1145,1178],[1267,1269],"[dispatch]",[1707,1709],[1883,1885],[2092,2094],[2306,2308],[2541,2543],[2693,2695],[2877,2879]]